{"ast":null,"code":"// import React, { useState } from 'react';\n\n// // adithyakarnati14\n// // xK4BVBW4VuaZuEfl\n// // import { useHistory } from 'react-router-dom';\n// import { TextField, Button, Typography, Paper, Grid } from '@mui/material';\n// import Navbar from './Navbar';\n\n// const Star = () => {\n//   <Navbar></Navbar>\n//   const [celebrityName, setCelebrityName] = useState('');\n//   const [height, setHeight] = useState('');\n//   const [weight, setWeight] = useState('');\n//   const [bmi, setBMI] = useState(null);\n//   const [dietPlan, setDietPlan] = useState('');\n//   const [exercises, setExercises] = useState('');\n\n//   const handleFetchData = () => {\n//     // Calculate BMI based on height and weight\n//     const heightInMeters = parseFloat(height) / 100;\n//     const weightInKg = parseFloat(weight);\n\n//     if (heightInMeters <= 0 || weightInKg <= 0) {\n//       alert('Please enter valid height and weight.');\n//       return;\n//     }\n\n//     const bmiValue = weightInKg / (heightInMeters * heightInMeters);\n//     setBMI(bmiValue.toFixed(1));\n\n//     // Determine exercises based on BMI range\n//     let exerciseSuggestions = '';\n//     let dietPlan='';\n//     if (bmiValue < 18.5) {\n//       exerciseSuggestions = 'Yoga and light cardio are recommended.';\n//       dietPlan=\"eat healthy and carbs\";\n//     }\n//     else if (bmiValue >= 18.5 && bmiValue < 25) {\n//       exerciseSuggestions = 'Running and strength training are recommended.';\n//       dietPlan=\"eat healthy and carbs\";\n\n//     } else {\n//       exerciseSuggestions = 'Weight lifting and intense cardio are recommended.';\n//       dietPlan=\"eat healthy and carbs\";\n\n//     }\n\n//     setDietPlan(dietPlan);\n//     setExercises(exerciseSuggestions);\n//   };\n\n//   return (\n//     <div>\n//       <Grid container spacing={3} style={{ marginTop: '100px' }}>\n//         <Grid item xs={12}>\n//           <Typography variant=\"h4\" gutterBottom>\n//             Celebrity Diet and Exercises\n//           </Typography>\n//         </Grid>\n//         <Grid item xs={12} sm={6}>\n//           <TextField\n//             label=\"Enter Celebrity Name\"\n//             variant=\"outlined\"\n//             fullWidth\n//             value={celebrityName}\n//             onChange={(e) => setCelebrityName(e.target.value)}\n//           />\n//         </Grid>\n//         <Grid item xs={6} sm={3}>\n//           <TextField\n//             label=\"Height (cm)\"\n//             variant=\"outlined\"\n//             fullWidth\n//             type=\"number\"\n//             value={height}\n//             onChange={(e) => setHeight(e.target.value)}\n//           />\n//         </Grid>\n//         <Grid item xs={6} sm={3}>\n//           <TextField\n//             label=\"Weight (kg)\"\n//             variant=\"outlined\"\n//             fullWidth\n//             type=\"number\"\n//             value={weight}\n//             onChange={(e) => setWeight(e.target.value)}\n//           />\n//         </Grid>\n//         <Grid item xs={12}>\n//           <Button\n//             variant=\"contained\"\n//             color=\"primary\"\n//             onClick={handleFetchData}\n//           >\n//             Calculate BMI and Get Exercises\n//           </Button>\n//         </Grid>\n//         {bmi !== null && (\n//           <Grid item xs={12} sm={6}>\n//             <Paper elevation={3} style={{ padding: '20px', marginTop: '20px' }}>\n//               <Typography variant=\"h6\">BMI:</Typography>\n//               <Typography>{bmi}</Typography>\n//             </Paper>\n//           </Grid>\n//         )}\n//         {dietPlan && exercises && (\n//           <Grid item xs={12} sm={6}>\n//             <Paper elevation={3} style={{ padding: '20px', marginTop: '20px' }}>\n//               <Typography variant=\"h6\">Diet Plan:</Typography>\n//               <Typography>{dietPlan}</Typography>\n//               <Typography variant=\"h6\" style={{ marginTop: '10px' }}>\n//                 Exercises:\n//               </Typography>\n//               <Typography>{exercises}</Typography>\n//             </Paper>\n//           </Grid>\n//         )}\n//       </Grid>\n//     </div>\n//   );\n// };\n\n// export default Star;","map":{"version":3,"names":[],"sources":["C:/Users/gopic/OneDrive/Desktop/gym/src/components/Star.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// // adithyakarnati14\r\n// // xK4BVBW4VuaZuEfl\r\n// // import { useHistory } from 'react-router-dom';\r\n// import { TextField, Button, Typography, Paper, Grid } from '@mui/material';\r\n// import Navbar from './Navbar';\r\n\r\n// const Star = () => {\r\n//   <Navbar></Navbar>\r\n//   const [celebrityName, setCelebrityName] = useState('');\r\n//   const [height, setHeight] = useState('');\r\n//   const [weight, setWeight] = useState('');\r\n//   const [bmi, setBMI] = useState(null);\r\n//   const [dietPlan, setDietPlan] = useState('');\r\n//   const [exercises, setExercises] = useState('');\r\n\r\n//   const handleFetchData = () => {\r\n//     // Calculate BMI based on height and weight\r\n//     const heightInMeters = parseFloat(height) / 100;\r\n//     const weightInKg = parseFloat(weight);\r\n\r\n//     if (heightInMeters <= 0 || weightInKg <= 0) {\r\n//       alert('Please enter valid height and weight.');\r\n//       return;\r\n//     }\r\n\r\n//     const bmiValue = weightInKg / (heightInMeters * heightInMeters);\r\n//     setBMI(bmiValue.toFixed(1));\r\n\r\n//     // Determine exercises based on BMI range\r\n//     let exerciseSuggestions = '';\r\n//     let dietPlan='';\r\n//     if (bmiValue < 18.5) {\r\n//       exerciseSuggestions = 'Yoga and light cardio are recommended.';\r\n//       dietPlan=\"eat healthy and carbs\";\r\n//     }\r\n//     else if (bmiValue >= 18.5 && bmiValue < 25) {\r\n//       exerciseSuggestions = 'Running and strength training are recommended.';\r\n//       dietPlan=\"eat healthy and carbs\";\r\n\r\n//     } else {\r\n//       exerciseSuggestions = 'Weight lifting and intense cardio are recommended.';\r\n//       dietPlan=\"eat healthy and carbs\";\r\n\r\n//     }\r\n\r\n//     setDietPlan(dietPlan);\r\n//     setExercises(exerciseSuggestions);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Grid container spacing={3} style={{ marginTop: '100px' }}>\r\n//         <Grid item xs={12}>\r\n//           <Typography variant=\"h4\" gutterBottom>\r\n//             Celebrity Diet and Exercises\r\n//           </Typography>\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={6}>\r\n//           <TextField\r\n//             label=\"Enter Celebrity Name\"\r\n//             variant=\"outlined\"\r\n//             fullWidth\r\n//             value={celebrityName}\r\n//             onChange={(e) => setCelebrityName(e.target.value)}\r\n//           />\r\n//         </Grid>\r\n//         <Grid item xs={6} sm={3}>\r\n//           <TextField\r\n//             label=\"Height (cm)\"\r\n//             variant=\"outlined\"\r\n//             fullWidth\r\n//             type=\"number\"\r\n//             value={height}\r\n//             onChange={(e) => setHeight(e.target.value)}\r\n//           />\r\n//         </Grid>\r\n//         <Grid item xs={6} sm={3}>\r\n//           <TextField\r\n//             label=\"Weight (kg)\"\r\n//             variant=\"outlined\"\r\n//             fullWidth\r\n//             type=\"number\"\r\n//             value={weight}\r\n//             onChange={(e) => setWeight(e.target.value)}\r\n//           />\r\n//         </Grid>\r\n//         <Grid item xs={12}>\r\n//           <Button\r\n//             variant=\"contained\"\r\n//             color=\"primary\"\r\n//             onClick={handleFetchData}\r\n//           >\r\n//             Calculate BMI and Get Exercises\r\n//           </Button>\r\n//         </Grid>\r\n//         {bmi !== null && (\r\n//           <Grid item xs={12} sm={6}>\r\n//             <Paper elevation={3} style={{ padding: '20px', marginTop: '20px' }}>\r\n//               <Typography variant=\"h6\">BMI:</Typography>\r\n//               <Typography>{bmi}</Typography>\r\n//             </Paper>\r\n//           </Grid>\r\n//         )}\r\n//         {dietPlan && exercises && (\r\n//           <Grid item xs={12} sm={6}>\r\n//             <Paper elevation={3} style={{ padding: '20px', marginTop: '20px' }}>\r\n//               <Typography variant=\"h6\">Diet Plan:</Typography>\r\n//               <Typography>{dietPlan}</Typography>\r\n//               <Typography variant=\"h6\" style={{ marginTop: '10px' }}>\r\n//                 Exercises:\r\n//               </Typography>\r\n//               <Typography>{exercises}</Typography>\r\n//             </Paper>\r\n//           </Grid>\r\n//         )}\r\n//       </Grid>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Star;\r\n\r\n\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}